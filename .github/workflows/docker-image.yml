name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Obter a próxima tag
      - name: Get next tag
        id: next-tag
        run: |
          # Listar tags existentes e determinar a maior
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            next_tag="v1.0.0"
          else
            IFS='.' read -ra parts <<< "${latest_tag#v}"
            major=${parts[0]}
            minor=${parts[1]}
            patch=${parts[2]}
            patch=$((patch + 1))
            next_tag="v${major}.${minor}.${patch}"
          fi
          echo "next_tag=$next_tag" >> $GITHUB_ENV

      # Log in to Quay.io
      - name: Log in to Quay.io
        env:
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          echo "$QUAY_PASSWORD" | docker login quay.io -u "$QUAY_USERNAME" --password-stdin

      # Build a Docker image
      - name: Build Docker Image
        run: |
          docker build -t quay.io/rh-ee-ggalvaog/relogio-dinamico-flask:${{ env.next_tag }} .

      # Push the Docker image
      - name: Push Docker Image
        run: |
          docker push quay.io/rh-ee-ggalvaog/relogio-dinamico-flask:${{ env.next_tag }}

      # Criar tag no GitHub
      - name: Create GitHub Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a ${{ env.next_tag }} -m "Release ${{ env.next_tag }}"
          git push origin ${{ env.next_tag }}
